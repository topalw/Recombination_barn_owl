setwd("C:/Users/topalw/Desktop/PhD/Analyses/Chapter_A/x.scripts")
library(tidyverse)
source('functions.r')
### DATA
# windows of 5mb - used for scaffold length
scaffs <- read_delim('../1.data/3.windows/genome_5mb_windows.bed',col_names = c('ss','start','end'))
# lepmap results
lm <- read_delim('../1.data/1.LepMAP/orders/best_likelihood_pruned_orders.table')
# pyrho ch results - raw
ch <- read_delim('../1.data/2.pyrho/estimates/CH_m200_total.theta',col_names = c('ss','a','b','rho'))
### TRANSFORMATIONS
# summarize length of scaffolds
scaffs$ss <- rename.ss(scaffs$ss)
ss.s <- scaffs %>% group_by(ss) %>% summarize(ss = unique(ss), len = max(end) )
# summarize length of LGs
lm <- lm[! is.na(lm$av),]
lm.s <- lm %>% group_by(lg) %>% reframe(lg = unique(lg),ss=unique(ss),  lm.cM = max(av))
lm.s$len <- ss.s$len[match(lm.s$ss,ss.s$ss)] # add length
# Super-Scaffold_2 correction (first LG is all but start then only start - start= 1-28161559)
lm.s$len[lm.s$lg==1] <- lm.s$len[lm.s$lg==1] - min(lm$pos[lm$lg==1])
lm.s$len[lm.s$lg!=1 & lm.s$ss=='ss2'] <-  min(lm$pos[lm$lg==1])
lm.s$ss[lm.s$lg!=1 & lm.s$ss=='ss2'] <- 'ss2.2'
# transform pyrho rho to cM (Haldane's mapping function)
ch$rho <- ch$rho * (ch$b - ch$a)
ch$rho <- -(1/2) * log(1 -2 *(ch$rho ), base=exp(1)) * 100
# summarize pyrho and merge with LM
ch$ss[ch$ss == 'Super-Scaffold_2' & ch$b <= 28692481] <- 'Super-Scaffold_2.2'
ch.s <- ch %>% group_by(ss) %>% summarize(ss = unique(ss), snps = n(), py.cM = sum(rho))
ch.s$ss <- rename.ss(ch.s$ss)
d <- left_join(lm.s,ch.s, by='ss')
# scale CH
scaling.factor <- sum(d$lm.cM) / sum(d$py.cM)
ch$rho <- ch$rho * scaling.factor
ch$cmmb <- (ch$rho * 1e6) / (ch$b-ch$a) # get cM/Mb
pt <- read_delim('../1.data/2.pyrho/estimates/PT_26_total.theta',col_names = c('ss','a','b','rho'))
gb <- read_delim('../1.data/2.pyrho/estimates/gb_26_total.theta',col_names = c('ss','a','b','rho'))
ch13_1 <- read_delim('../1.data/2.pyrho/estimates/CH13_26_total.theta',col_names = c('ss','a','b','rho'))
ch13_2 <- read_delim('../1.data/2.pyrho/estimates/CH13_2_26_total.theta',col_names = c('ss','a','b','rho'))
hald <- function(data){
hald <- -(1/2) * log(1 -2 *(data$rho * (data$b- data$a) ), base=exp(1)) * 100
return(hald)
}
View(hald)
View(hald)
View(haldane)
source('functions.r')
# transform pyrho rho to cM (Haldane's mapping function)
ch$hald <- hald(ch)
head(ch)
### FUNCTION 3 - make cM and cM/Mb columns from thetaxN
hald <- function(data){
hald <- -(1/2) * log(1 - (2*(data$rho * (data$b - data$a)) ), base=exp(1)) * 100
return(hald)
}
hald(ch[1:10,])
tmp <- ch[1:10,]
tmp$rho * (tmp$b-tmp$a)
log(1-2*tmp$rho * (tmp$b-tmp$a),base=exp(1))
(tmp$b-tmp$a)
tmp$rho*(tmp$b-tmp$a)
log(1-2*tmp$rho*(tmp$b-tmp$a))
log(1-2*tmp$rho*(tmp$b-tmp$a),base=exp(1))
# pyrho ch results - raw
ch <- read_delim('../1.data/2.pyrho/estimates/CH_m200_total.theta',col_names = c('ss','a','b','rho'))
hald(ch[1:1,])
hald(ch[1:10,])
# transform pyrho rho to cM (Haldane's mapping function)
ch$hald <- hald(ch)
pt$hald <- hald(pt)
gb$hald <- hald(gb)
ch13_1$hald <- hald(ch13_1)
ch13_2$hald <- hald(ch13_2)
# summarize pyrho and merge with LM
ch$ss[ch$ss == 'Super-Scaffold_2' & ch$b <= 28692481] <- 'Super-Scaffold_2.2'
pt$ss[pt$ss == 'Super-Scaffold_2' & pt$b <= 28692481] <- 'Super-Scaffold_2.2'
gb$ss[gb$ss == 'Super-Scaffold_2' & gb$b <= 28692481] <- 'Super-Scaffold_2.2'
ch13_1$ss[ch13_1$ss == 'Super-Scaffold_2' & ch13_1$b <= 28692481] <- 'Super-Scaffold_2.2'
ch13_2$ss[ch13_2$ss == 'Super-Scaffold_2' & ch13_2$b <= 28692481] <- 'Super-Scaffold_2.2'
# summarize pyrho and merge with LM
ch.s <- ch %>% group_by(ss) %>% summarize(ss = unique(ss), snps = n(), ch.cM = sum(rho))
ch.s$ss <- rename.ss(ch.s$ss)
pt.s <- pt %>% group_by(ss) %>% summarize(ss = unique(ss), snps = n(), pt.cM = sum(rho))
pt.s$ss <- rename.ss(pt.s$ss)
gb.s <- gb %>% group_by(ss) %>% summarize(ss = unique(ss), snps = n(), gb.cM = sum(rho))
gb.s$ss <- rename.ss(gb.s$ss)
ch13_1.s <- ch13_1 %>% group_by(ss) %>% summarize(ss = unique(ss), snps = n(), ch13_1.cM = sum(rho))
ch13_1.s$ss <- rename.ss(ch13_1.s$ss)
ch13_2.s <- ch13_2 %>% group_by(ss) %>% summarize(ss = unique(ss), snps = n(), ch13_2.cM = sum(rho))
ch13_2.s$ss <- rename.ss(ch13_2.s$ss)
library(plyr)
library(tidyverse)
# summarize pyrho and merge with LM
ch.s <- ch %>% group_by(ss) %>% summarize(ss = unique(ss), ch.cM = sum(rho))
pt.s$ss <- rename.ss(pt.s$ss)
gb.s <- gb %>% group_by(ss) %>% summarize(ss = unique(ss), gb.cM = sum(rho))
ch13_1.s <- ch13_1 %>% group_by(ss) %>% summarize(ss = unique(ss), ch13_1.cM = sum(rho))
ch.s
# summarize pyrho and merge with LM
ch.s <- ch %>% group_by(ss) %>% summarize(ss = unique(ss), ch.cM = sum(rho))
library(tidyverse)
library(dplyr)
# summarize pyrho and merge with LM
ch.s <- ch %>% group_by(ss) %>% summarize(ss = unique(ss), ch.cM = sum(rho))
detach("package:plyr", unload = TRUE)
# summarize pyrho and merge with LM
ch.s <- ch %>% group_by(ss) %>% summarize(ss = unique(ss), ch.cM = sum(rho))
ch.s$ss <- rename.ss(ch.s$ss)
pt.s <- pt %>% group_by(ss) %>% summarize(ss = unique(ss), pt.cM = sum(rho))
pt.s$ss <- rename.ss(pt.s$ss)
gb.s <- gb %>% group_by(ss) %>% summarize(ss = unique(ss), gb.cM = sum(rho))
gb.s$ss <- rename.ss(gb.s$ss)
ch13_1.s <- ch13_1 %>% group_by(ss) %>% summarize(ss = unique(ss), ch13_1.cM = sum(rho))
ch13_1.s$ss <- rename.ss(ch13_1.s$ss)
ch13_2.s <- ch13_2 %>% group_by(ss) %>% summarize(ss = unique(ss), ch13_2.cM = sum(rho))
ch13_2.s$ss <- rename.ss(ch13_2.s$ss)
py.all <- plyr::join_all(list(ch.s,pt.s,gb.s,ch13_1.s,ch13_2.s), by='ss',type='left')
head(py.all)
### FUNCTION 3 - make cM and cM/Mb columns from thetaxN
hald <- function(data){
hald <- -0.5 * log(1 - (2*(data$rho * (data$b - data$a))), base=exp(1)) * 100
return(hald)
}
# transform pyrho rho to cM (Haldane's mapping function)
ch$hald <- hald(ch)
sum(ch$hald[ch$ss=='Super-Scaffold_1'])
ch.s
# summarize pyrho and merge with LM
ch.s <- ch %>% group_by(ss) %>% summarize(ss = unique(ss), ch.cM = sum(hald))
ch.s$ss <- rename.ss(ch.s$ss)
pt.s <- pt %>% group_by(ss) %>% summarize(ss = unique(ss), pt.cM = sum(hald))
pt.s$ss <- rename.ss(pt.s$ss)
gb.s <- gb %>% group_by(ss) %>% summarize(ss = unique(ss), gb.cM = sum(hald))
gb.s$ss <- rename.ss(gb.s$ss)
ch13_1.s <- ch13_1 %>% group_by(ss) %>% summarize(ss = unique(ss), ch13_1.cM = sum(hald))
ch13_1.s$ss <- rename.ss(ch13_1.s$ss)
ch13_2.s <- ch13_2 %>% group_by(ss) %>% summarize(ss = unique(ss), ch13_2.cM = sum(hald))
ch13_2.s$ss <- rename.ss(ch13_2.s$ss)
py.all <- plyr::join_all(list(ch.s,pt.s,gb.s,ch13_1.s,ch13_2.s), by='ss',type='left')
head(py.all)
plot(py.all$ch.cM~py.all$ch13_1.cM)
abline(0,1)
plot(py.all$ch.cM~py.all$ch13_2.cM)
abline(0,1)
plot(py.all$ch13_1.cM~py.all$ch13_2.cM)
abline(0,1)
d <- left_join(lm.s,py.all, by='ss')
d
plot(d)
d[d$lg==24,]
d[d$lg==1,]
plot(d$lm.cM~d$ch13_1.cM)
abline(0,1)
plot(d$lm.cM~d$ch13_2.cM)
abline(0,1)
plot(d$lm.cM~d$ch.cM)
abline(0,1)
# scale CH
scaling.factor <- sum(d$lm.cM) / sum(d$ch.cM)
plot(y=d$lm.cM,x=d$ch.cM*scaling.factor)
abline(0,1)
# scale pyrho
data.frame('pop'=c('ch','pt','gb','ch13_1','ch13_2'),
'scaling_factor'=rep(0,5))
# scale pyrho
scales <- data.frame('pop'=c('ch','pt','gb','ch13_1','ch13_2'),
'scaling_factor'=rep(0,5))
head(d)
for(i in 5:9){
head(d[,i])
}
for(i in 5:9){
print(head(d[,i]))
}
for(i in 5:9){
scales$scaling_factor[i-4,2] <- sum(d$lm.cM) / sum(d[,i])
}
for(i in 5:9){
scales$scaling_factor[i-4] <- sum(d$lm.cM) / sum(d[,i])
}
scales
scales
?write_delim
require(plyr)
### TOOLS
library(plyr)
library(tidyverse)
source('functions.r')
### DATA
# windows of 5mb - used for scaffold length
scaffs <- read_delim('../1.data/3.windows/genome_5mb_windows.bed',col_names = c('ss','start','end'))
# lepmap results
lm <- read_delim('../1.data/1.LepMAP/orders/best_likelihood_pruned_orders.table')
# pyrho ch results - raw
ch <- read_delim('../1.data/2.pyrho/estimates/CH_m200_total.theta',col_names = c('ss','a','b','rho'))
pt <- read_delim('../1.data/2.pyrho/estimates/PT_26_total.theta',col_names = c('ss','a','b','rho'))
gb <- read_delim('../1.data/2.pyrho/estimates/gb_26_total.theta',col_names = c('ss','a','b','rho'))
ch13_1 <- read_delim('../1.data/2.pyrho/estimates/CH13_26_total.theta',col_names = c('ss','a','b','rho'))
ch13_2 <- read_delim('../1.data/2.pyrho/estimates/CH13_2_26_total.theta',col_names = c('ss','a','b','rho'))
### TRANSFORMATIONS
# summarize length of scaffolds
scaffs$ss <- rename.ss(scaffs$ss)
ss.s <- scaffs %>% group_by(ss) %>% summarize(ss = unique(ss), len = max(end) )
detach("package:plyr", unload = TRUE)
setwd("C:/Users/topalw/Desktop/PhD/Analyses/Chapter_A/x.scripts")
### TOOLS
library(tidyverse)
source('functions.r')
### DATA
# windows of 5mb - used for scaffold length
scaffs <- read_delim('../1.data/3.windows/genome_5mb_windows.bed',col_names = c('ss','start','end'))
# lepmap results
lm <- read_delim('../1.data/1.LepMAP/orders/best_likelihood_pruned_orders.table')
# pyrho ch results - raw
ch <- read_delim('../1.data/2.pyrho/estimates/CH_m200_total.theta',col_names = c('ss','a','b','rho'))
pt <- read_delim('../1.data/2.pyrho/estimates/PT_26_total.theta',col_names = c('ss','a','b','rho'))
gb <- read_delim('../1.data/2.pyrho/estimates/gb_26_total.theta',col_names = c('ss','a','b','rho'))
ch13_1 <- read_delim('../1.data/2.pyrho/estimates/CH13_26_total.theta',col_names = c('ss','a','b','rho'))
ch13_2 <- read_delim('../1.data/2.pyrho/estimates/CH13_2_26_total.theta',col_names = c('ss','a','b','rho'))
### TRANSFORMATIONS
# summarize length of scaffolds
scaffs$ss <- rename.ss(scaffs$ss)
ss.s <- scaffs %>% group_by(ss) %>% summarize(ss = unique(ss), len = max(end) )
# summarize length of LGs
lm <- lm[! is.na(lm$av),]
lm.s <- lm %>% group_by(lg) %>% reframe(lg = unique(lg),ss=unique(ss),  lm.cM = max(av))
lm.s$len <- ss.s$len[match(lm.s$ss,ss.s$ss)] # add length
# Super-Scaffold_2 correction (first LG is all but start then only start - start= 1-28161559)
lm.s$len[lm.s$lg==1] <- lm.s$len[lm.s$lg==1] - min(lm$pos[lm$lg==1])
lm.s$len[lm.s$lg!=1 & lm.s$ss=='ss2'] <-  min(lm$pos[lm$lg==1])
lm.s$ss[lm.s$lg!=1 & lm.s$ss=='ss2'] <- 'ss2.2'
# transform pyrho rho to cM (Haldane's mapping function)
ch$hald <- hald(ch)
pt$hald <- hald(pt)
gb$hald <- hald(gb)
ch13_1$hald <- hald(ch13_1)
ch13_2$hald <- hald(ch13_2)
# fix ss2_2
ch$ss[ch$ss == 'Super-Scaffold_2' & ch$b <= 28692481] <- 'Super-Scaffold_2.2'
pt$ss[pt$ss == 'Super-Scaffold_2' & pt$b <= 28692481] <- 'Super-Scaffold_2.2'
gb$ss[gb$ss == 'Super-Scaffold_2' & gb$b <= 28692481] <- 'Super-Scaffold_2.2'
ch13_1$ss[ch13_1$ss == 'Super-Scaffold_2' & ch13_1$b <= 28692481] <- 'Super-Scaffold_2.2'
ch13_2$ss[ch13_2$ss == 'Super-Scaffold_2' & ch13_2$b <= 28692481] <- 'Super-Scaffold_2.2'
# summarize pyrho and merge with LM
ch.s <- ch %>% group_by(ss) %>% summarize(ss = unique(ss), ch.cM = sum(hald))
ch.s$ss <- rename.ss(ch.s$ss)
pt.s <- pt %>% group_by(ss) %>% summarize(ss = unique(ss), pt.cM = sum(hald))
pt.s$ss <- rename.ss(pt.s$ss)
gb.s <- gb %>% group_by(ss) %>% summarize(ss = unique(ss), gb.cM = sum(hald))
gb.s$ss <- rename.ss(gb.s$ss)
ch13_1.s <- ch13_1 %>% group_by(ss) %>% summarize(ss = unique(ss), ch13_1.cM = sum(hald))
ch13_1.s$ss <- rename.ss(ch13_1.s$ss)
ch13_2.s <- ch13_2 %>% group_by(ss) %>% summarize(ss = unique(ss), ch13_2.cM = sum(hald))
ch13_2.s$ss <- rename.ss(ch13_2.s$ss)
py.all <- plyr::join_all(list(ch.s,pt.s,gb.s,ch13_1.s,ch13_2.s), by='ss',type='left')
d <- left_join(lm.s,py.all, by='ss')
# scale pyrho
scales <- data.frame('pop'=c('ch','pt','gb','ch13_1','ch13_2'),
'scaling_factor'=rep(0,5))
for(i in 5:9){
scales$scaling_factor[i-4] <- sum(d$lm.cM) / sum(d[,i])
}
ch$cM.scaled <- ch$hald * scales$scaling_factor[1]
pt$cM.scaled <- pt$hald * scales$scaling_factor[2]
gb$cM.scaled <- gb$hald * scales$scaling_factor[3]
ch13_1$cM.scaled <- ch13_1$hald * scales$scaling_factor[4]
ch13_2$cM.scaled <- ch13_2$hald * scales$scaling_factor[5]
### WRITE
write_delim(ch,'../1.data/2.pyrho/scaled_datasets/ch_scaled_all.txt',quote = 'none',eol='\n')
write_delim(pt,'../1.data/2.pyrho/scaled_datasets/pt_scaled_all.txt',quote = 'none',eol='\n')
write_delim(gb,'../1.data/2.pyrho/scaled_datasets/gb_scaled_all.txt',quote = 'none',eol='\n')
write_delim(ch13_1,'../1.data/2.pyrho/scaled_datasets/ch13_1_scaled_all.txt',quote = 'none',eol='\n')
write_delim(ch13_2,'../1.data/2.pyrho/scaled_datasets/ch13_2_scaled_all.txt',quote = 'none',eol='\n')
write.table(scales,'../1.data/2.pyrho/scaled_datasets/scaling_factors.txt',quote=F,row.names=F)
write.table(d,'../1.data/PerLG_lm_py_unscaled.txt',quote=F,row.names=F)
